model Email {
  id               String           @id @default(cuid())
  senderEmail      String
  receiverEmail    String?
  subject          String?
  body             String
  attachment       String[]
  isReadBySender   Boolean          @default(true)
  isReadByReceiver Boolean          @default(false)
  isDraft          Boolean          @default(false)
  isSent           Boolean          @default(false)
  createdAt        DateTime         @default(now())
  senderId         String
  receiverId       String?
  parentEmailId    String?
  threadId         String?
  isReply          Boolean          @default(false)
  isArchived       Boolean          @default(false)
  isSpam           Boolean          @default(false)
  isStarred        Boolean          @default(false)
  isDeleted        Boolean          @default(false)
  parentEmail      Email?           @relation("EmailReplies", fields: [parentEmailId], references: [id])
  replies          Email[]          @relation("EmailReplies")
  receiver         users?           @relation("ReceivedEmails", fields: [receiverId], references: [id])
  sender           users            @relation("SentEmails", fields: [senderId], references: [id])
  states           UserEmailState[]

  // Critical indexes for email system performance
  @@index([senderId, createdAt])                    // Sent folder - most common query
  @@index([receiverId, createdAt])                  // Inbox - most common query
  @@index([senderId, isDeleted, createdAt])         // Sent items with soft delete
  @@index([receiverId, isDeleted, createdAt])       // Inbox with soft delete
  @@index([threadId, createdAt])                    // Email threading
  @@index([parentEmailId])                          // Email replies
  @@index([createdAt])                              // Global email ordering
  @@index([senderEmail])                            // Search by sender email
  @@index([receiverEmail])                          // Search by receiver email
  @@index([isDraft, senderId])                      // Drafts folder
  @@index([isSent, senderId])                       // Sent folder status
  @@index([isArchived, senderId, createdAt])        // Archived emails
  @@index([isArchived, receiverId, createdAt])      // Archived emails
  @@index([isSpam, receiverId, createdAt])          // Spam folder
  @@index([isStarred, senderId, createdAt])         // Starred emails (sent)
  @@index([isStarred, receiverId, createdAt])       // Starred emails (received)
  @@index([isReadByReceiver, receiverId, createdAt]) // Unread emails
  // Composite indexes for common email client operations
  @@index([receiverId, isDeleted, isSpam, isArchived, createdAt])
  @@index([senderId, isDeleted, isDraft, isSent, createdAt])
  @@index([threadId, createdAt, id])                // Thread ordering with tiebreaker
}

model UserEmailState {
  id         String  @id @default(cuid())
  emailId    String
  userId     String
  isRead     Boolean @default(false)
  isStarred  Boolean @default(false)
  isArchived Boolean @default(false)
  isSpam     Boolean @default(false)
  isDeleted  Boolean @default(false)
  isDraft    Boolean @default(false)
  email      Email   @relation(fields: [emailId], references: [id])
  user       users   @relation(fields: [userId], references: [id])

  @@unique([emailId, userId])
  
  // Comprehensive indexes for user email states
  @@index([userId, isRead, isDeleted])              // Unread count and inbox
  @@index([userId, isStarred, isDeleted])           // Starred emails
  @@index([userId, isArchived, isDeleted])          // Archived emails
  @@index([userId, isSpam, isDeleted])              // Spam folder
  @@index([userId, isDraft])                        // Drafts
  @@index([emailId])                                // Email lookup
  @@index([userId, isDeleted])                      // General user email state
  // Composite indexes for folder views
  @@index([userId, isRead, isArchived, isSpam, isDeleted])
  @@index([userId, isStarred, isRead, isDeleted])
}