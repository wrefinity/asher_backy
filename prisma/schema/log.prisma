enum LogType {
    MAINTENANCE
    APPLICATION
    TRANSACTION
    ACTIVITY
    VIEW
    // communication logs
    CALL
    MESSAGE
    EMAIL
}

model Log {
    id            String       @id @default(cuid()) // Unique ID for the log entry
    subjects      String? 
    events        String // Events or log description
    type          LogType? // Events or log description
    createdAt     DateTime     @default(now()) // Log creation timestamp
    propertyId    String? // Foreign key for the property (optional)
    property      properties?  @relation("props", fields: [propertyId], references: [id])
    applicationId    String? // Foreign key for the property (optional)
    application      application?  @relation("apply", fields: [applicationId], references: [id])
    transactionId String? // Foreign key for the transaction (optional)
    transaction   Transaction? @relation("transactions", fields: [transactionId], references: [id])
    createdById   String? // Foreign key for the transaction (optional)
    users         users?       @relation("users", fields: [createdById], references: [id])
    feedbacks     LogFeedback[]   @relation("logFeedback") 
}


model LogFeedback {
    id          String   @id @default(cuid()) // Unique ID for the feedback entry
    comment     String   // The feedback comment
    createdAt   DateTime @default(now()) // Timestamp when the feedback was created
    userId      String   // Foreign key for the user who provided the feedback
    user        users    @relation("feedbackUser", fields: [userId], references: [id])
    logId       String   // Foreign key for the log entry this feedback belongs to
    log         Log      @relation("logFeedback", fields: [logId], references: [id])
}